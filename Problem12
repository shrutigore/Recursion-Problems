/* Sort an array A using Quick Sort.
Change in the input array itself. So no need to return or print anything.*/
import java.util.Scanner;

public class Runner {
	
	static Scanner s = new Scanner(System.in);
	
	public static int[] takeInput(){
		int size = s.nextInt();
		int[] input = new int[size];
		for(int i = 0; i < size; i++){
			input[i] = s.nextInt();
		}
		return input;
	}
	
	public static void main(String[] args) {
		int[] input = takeInput();
		Solution.quickSort(input);
		for(int i = 0; i < input.length; i++) {
			System.out.print(input[i] + " ");
		}
	}
}
public class Solution {
	
	public static void quickSort(int[] input) {
        sort(input, 0, input.length-1);
        
    }
    static void sort(int[] nums, int low, int hi){
        if (low>=hi){
            return;
        }
        int s = low;
        int e = hi;
        int m = s + (e-s)/2;
        int pivot= nums[m];

        while (s<=e){
            while (nums[s] < pivot){
                s++;
            }
            while (nums[e] > pivot){
                e--;
            }
            if (s <= e) {
                int temp = nums[s];
                nums[s] = nums[e];
                nums[e] = temp;
                s++;
                e--;
                }
            }
            // now my pivot is at correct index, please sort two halves now
            sort(nums, low, e);
            sort(nums, s, hi);
        }

    }

