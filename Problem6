/* Given an array of length N and an integer x, you need to find and return the first index of integer x present in the array. Return -1 if it is not present in the array.
First index means, the index of first occurrence of x in the input array.
Do this recursively. Indexing in the array starts from 0.
*/
import java.util.Scanner;

public class Runner {
	
	static Scanner s = new Scanner(System.in);
	
	public static int[] takeInput(){
		int size = s.nextInt();
		int[] input = new int[size];
		for(int i = 0; i < size; i++){
			input[i] = s.nextInt();
		}
		return input;
	}
	
	public static void main(String[] args) {
		int[] input = takeInput();
		int x = s.nextInt();
		System.out.println(Solution.firstIndex(input, x));
	}
}
public class Solution {

	public static int firstIndex(int input[], int x) {
               return firstIndex(input, x, 0);
    }

        public static int firstIndex(int input[], int x, int SI) {
        //int SI = 0;
        //int x = target
        if (SI== input.length){
            return -1;
        }
        if (input[SI]== x){
            return SI;
        }
        else{
           return firstIndex(input, x, SI+1);
        }
	}
	
}
