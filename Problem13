/* Tower of Hanoi is a mathematical puzzle where we have three rods and n disks. The objective of the puzzle is to move all disks from source rod to destination rod using third rod (say auxiliary). The rules are :
1) Only one disk can be moved at a time.
2) A disk can be moved only if it is on the top of a rod.
3) No disk can be placed on the top of a smaller disk.
Print the steps required to move n disks from source rod to destination rod.
Source Rod is named as 'a', auxiliary rod as 'b' and destination rod as 'c'.
*/
import java.util.Scanner;

public class runner {
	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		int n = s.nextInt();
		solution.towerOfHanoi(n, 'a', 'b', 'c');
	}
}
public class solution {

           public static void towerOfHanoi(int n,char s,char h,char d){
               if(n == 0)	// n here denotes number of disks
             return;

        if(n==1){
            System.out.println(s +" " +d);
            return;
        }
        towerOfHanoi(n-1,s,d,h);
                       System.out.println(s+" "+d);

        towerOfHanoi(n-1,h,s,d);
    }

	}


